components:
  schemas:
    UserResponse:
      required:
        - 'id'
        - 'fullName'
        - 'phoneNumber'
        - 'updatedAt'
        - 'createdAt'
      properties:
        id:
          type: 'number'
        fullName:
          type: 'string'
        phoneNumber:
          type: 'string'
        profileImageUrl:
          type: 'string'
        photoIdUrl:
          type: 'string'
        email:
          type: 'string'
        dateOfBirth:
          type: 'string'
        addressId:
          type: 'number'
        updatedAt:
          type: 'string'
        createdAt:
          type: 'string'

    UserWithAddressResponse:
      required:
        - 'id'
        - 'fullName'
        - 'phoneNumber'
        - 'updatedAt'
        - 'createdAt'
      properties:
        id:
          type: 'number'
        fullName:
          type: 'string'
        phoneNumber:
          type: 'string'
        profileImageUrl:
          type: 'string'
        photoIdUrl:
          type: 'string'
        email:
          type: 'string'
        dateOfBirth:
          type: 'string'
        addressId:
          type: 'number'
        address:
          $ref: '#/components/schemas/AddressResponse'
        updatedAt:
          type: 'string'
        createdAt:
          type: 'string'

    CreateUserWithAddressBody:
      required:
        - 'fullName'
        - 'role'
      properties:
        fullName:
          type: 'string'
        profileImageUrl:
          type: 'string'
        photoIdUrl:
          type: 'string'
        email:
          type: 'string'
        dateOfBirth:
          type: 'string'
        addressId:
          type: 'number'
        role:
          type: 'string'
          enum: [driver, parent, both]

        address:
          $ref: '#/components/schemas/CreateAddressBody'

    UpdateUserWithAddressBody:
      required:
        - 'id'
        - 'fullName'
      properties:
        id:
          type: 'number'
        fullName:
          type: 'string'
        profileImageUrl:
          type: 'string'
        photoIdUrl:
          type: 'string'
        email:
          type: 'string'
        dateOfBirth:
          type: 'string'
        addressId:
          type: 'number'
        address:
          $ref: '#/components/schemas/CreateAddressBody'

    UserAddRole:
      required:
        - 'role'
      properties:
        role:
          type: 'string'
          enum: [driver, parent, both]
